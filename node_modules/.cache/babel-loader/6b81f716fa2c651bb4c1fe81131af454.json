{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\burger-app\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Auxiliary from '../../Hoc/Auxiliary';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControl from '../../components/Burger/BurgerControl/BurgerControl';\nimport Model from '../../components/UI/Modal/Model';\nimport OrderSummery from '../../components/Burger/OrderSummery/OrderSummery';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport WithError from '../../components/WithError/WithError';\nconst INGREDIENTS_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  bacon: 1.0,\n  meat: 1.5\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: null,\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.items[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.items\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENTS_PRICES[type];\n      const newPrice = this.state.totalPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        items: updatedIngredients\n      });\n      this.UpdatePurchaseState(newPrice);\n    };\n\n    this.removeIngredientHandler = type => {\n      if (this.state.items[type] !== 0) {\n        const oldCount = this.state.items[type];\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = { ...this.state.items\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENTS_PRICES[type];\n        const newPrice = this.state.totalPrice - priceAddition;\n        this.setState({\n          totalPrice: newPrice,\n          items: updatedIngredients\n        });\n        this.UpdatePurchaseState(newPrice);\n      }\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      // alert(\"order conformed!\")\n      this.setState({\n        loading: true\n      });\n      const order = {\n        items: this.state.items,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'udaya',\n          address: '1333 south park'\n        }\n      };\n      axios.post('/orders.json', order).then(response => this.setState({\n        loading: false,\n        purchasing: false\n      })).catch(error => this.setState({\n        loading: false,\n        purchasing: false\n      }));\n    };\n  }\n\n  componentDidCatch() {\n    axios.get('/items.json').then(response => {\n      this.setState({\n        items: response.data\n      });\n    });\n  }\n\n  UpdatePurchaseState(price) {\n    price = price - 4;\n    this.setState({\n      purchasable: price > 0 ? true : false\n    });\n  }\n\n  render() {\n    let ordersummery = /*#__PURE__*/React.createElement(OrderSummery, {\n      purchaseCanceled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      ingredients: this.state.items,\n      totalprice: this.state.totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 26\n      }\n    });\n\n    if (this.state.loading) {\n      ordersummery = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 26\n        }\n      });\n    }\n\n    const disabledInfo = { ...this.state.items\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Auxiliary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Model, {\n      show: this.state.purchasing,\n      modelClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, ordersummery), /*#__PURE__*/React.createElement(Burger, {\n      items: this.state.items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BurgerControl, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      totalprice: this.state.totalPrice,\n      purchase: this.state.purchasable,\n      ordered: this.purchaseHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default WithError(BurgerBuilder, axios);","map":{"version":3,"sources":["D:/React/burger-app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Auxiliary","Burger","BurgerControl","Model","OrderSummery","axios","Spinner","WithError","INGREDIENTS_PRICES","salad","cheese","bacon","meat","BurgerBuilder","state","items","totalPrice","purchasable","purchasing","loading","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","newPrice","setState","UpdatePurchaseState","removeIngredientHandler","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","address","post","then","response","catch","error","componentDidCatch","get","data","render","ordersummery","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Auxiliary from '../../Hoc/Auxiliary' \r\nimport Burger from '../../components/Burger/Burger'\r\nimport BurgerControl from '../../components/Burger/BurgerControl/BurgerControl'\r\nimport Model from '../../components/UI/Modal/Model'\r\nimport OrderSummery from '../../components/Burger/OrderSummery/OrderSummery'\r\nimport axios from '../../axios-orders'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport WithError from '../../components/WithError/WithError'\r\n\r\nconst INGREDIENTS_PRICES ={\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    bacon:1.0,\r\n    meat:1.5,\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    //  constructor(props){\r\n    //     super(props);\r\n    //     this.state={...}\r\n\r\n    //  }\r\n\r\n     state={\r\n         items:null,\r\n         totalPrice:4,\r\n         purchasable:false,\r\n         purchasing :false,\r\n         loading:false,\r\n     }\r\n\r\n     componentDidCatch(){\r\n         axios.get('/items.json')\r\n         .then(response =>{\r\n             this.setState({items:response.data})\r\n             \r\n         })\r\n     }\r\n     UpdatePurchaseState(price){\r\n          price = price-4;\r\n         this.setState({purchasable:(price>0)?true:false})\r\n\r\n     }\r\n\r\n     addIngredientHandler = (type)=>{\r\n                const oldCount = this.state.items[type];\r\n                const updatedCount = oldCount +1;\r\n                const updatedIngredients = {\r\n                    ...this.state.items\r\n                }\r\n                updatedIngredients[type]=updatedCount;\r\n                const priceAddition = INGREDIENTS_PRICES[type];\r\n                const newPrice = this.state.totalPrice + priceAddition;\r\n                this.setState({ totalPrice:newPrice,items:updatedIngredients})\r\n                this.UpdatePurchaseState(newPrice);\r\n            }\r\n\r\n     removeIngredientHandler =(type)=>{\r\n                if(this.state.items[type]!==0){\r\n        const oldCount = this.state.items[type];\r\n        const updatedCount = oldCount -1;\r\n        const updatedIngredients = {\r\n            ...this.state.items\r\n        }\r\n        updatedIngredients[type]=updatedCount;\r\n        const priceAddition = INGREDIENTS_PRICES[type];\r\n        const newPrice = this.state.totalPrice - priceAddition;\r\n        this.setState({ totalPrice:newPrice,items:updatedIngredients})\r\n        this.UpdatePurchaseState(newPrice);\r\n     }\r\n    }\r\n\r\n    purchaseHandler=()=>{\r\n        this.setState({\r\n            purchasing:true,\r\n        })\r\n    }\r\n\r\n    purchaseCancelHandler = ()=>{\r\n        this.setState({purchasing:false})\r\n    }\r\n\r\n    purchaseContinueHandler =()=>{\r\n        // alert(\"order conformed!\")\r\n        this.setState({loading:true})\r\n        const order={\r\n            items:this.state.items,\r\n            price:this.state.totalPrice,\r\n            customer:{\r\n                name:'udaya',\r\n                address:'1333 south park'\r\n            }\r\n        }\r\n            axios.post('/orders.json',order)\r\n            .then(response => this.setState({loading:false,purchasing:false}))\r\n            .catch(error=>this.setState({loading:false,purchasing:false}) )\r\n\r\n    }\r\n    render() {\r\n\r\n        let ordersummery=<OrderSummery \r\n            purchaseCanceled = {this.purchaseCancelHandler}\r\n            purchaseContinued ={this.purchaseContinueHandler}\r\n            ingredients={this.state.items}\r\n            totalprice={this.state.totalPrice} />\r\n\r\n        if(this.state.loading){\r\n            ordersummery=<Spinner />\r\n        }\r\n\r\n        const disabledInfo={\r\n            ...this.state.items\r\n        };\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] =disabledInfo[key] <=0;\r\n        }\r\n\r\n        \r\n        return (\r\n            <Auxiliary>\r\n                <Model show ={this.state.purchasing} \r\n                modelClosed={this.purchaseCancelHandler}> \r\n                   {ordersummery}\r\n                   </Model>     \r\n                {/* <div>Burger</div> */}\r\n                <Burger items={this.state.items}/>\r\n                {/* <div>Build Controls</div> */}\r\n                <BurgerControl \r\n                    ingredientAdded={this.addIngredientHandler}\r\n                    ingredientRemoved ={this.removeIngredientHandler}\r\n                    disabled={disabledInfo}\r\n                    totalprice={this.state.totalPrice}\r\n                    purchase={this.state.purchasable}\r\n                    ordered={this.purchaseHandler}\r\n               />\r\n            </Auxiliary>\r\n                \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default WithError(BurgerBuilder,axios)\r\n"]},"metadata":{},"sourceType":"module"}