{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\burger-app\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Auxiliary from '../../Hoc/Auxiliary';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControl from '../../components/Burger/BurgerControl/BurgerControl';\nimport Model from '../../components/UI/Modal/Model';\nconst INGREDIENTS_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  bacon: 1.0,\n  meat: 1.5\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.items[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.items\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENTS_PRICES[type];\n      const newPrice = this.state.totalPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        items: updatedIngredients\n      });\n      this.UpdatePurchaseState(newPrice);\n    };\n\n    this.removeIngredientHandler = type => {\n      if (this.state.items[type] !== 0) {\n        const oldCount = this.state.items[type];\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = { ...this.state.items\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENTS_PRICES[type];\n        const newPrice = this.state.totalPrice - priceAddition;\n        this.setState({\n          totalPrice: newPrice,\n          items: updatedIngredients\n        });\n        this.UpdatePurchaseState(newPrice);\n      }\n    };\n  }\n\n  UpdatePurchaseState(price) {\n    price = price - 4;\n    this.setState({\n      purchasable: price > 0 ? true : false\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.items\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Auxiliary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Burger, {\n      items: this.state.items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BurgerControl, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      totalprice: this.state.totalPrice,\n      purchase: this.state.purchasable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["D:/React/burger-app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Auxiliary","Burger","BurgerControl","Model","INGREDIENTS_PRICES","salad","cheese","bacon","meat","BurgerBuilder","state","items","totalPrice","purchasable","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","newPrice","setState","UpdatePurchaseState","removeIngredientHandler","price","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Auxiliary from '../../Hoc/Auxiliary' \r\nimport Burger from '../../components/Burger/Burger'\r\nimport BurgerControl from '../../components/Burger/BurgerControl/BurgerControl'\r\nimport Model from '../../components/UI/Modal/Model'\r\n\r\n\r\n\r\n\r\nconst INGREDIENTS_PRICES ={\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    bacon:1.0,\r\n    meat:1.5,\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    //  constructor(props){\r\n    //     super(props);\r\n    //     this.state={...}\r\n\r\n    //  }\r\n\r\n     state={\r\n         items:{\r\n             salad:0,\r\n             bacon:0,\r\n             cheese:0,\r\n             meat:0,\r\n         },\r\n         totalPrice:4,\r\n         purchasable:false\r\n\r\n     }\r\n\r\n     UpdatePurchaseState(price){\r\n          price = price-4;\r\n         this.setState({purchasable:(price>0)?true:false})\r\n\r\n     }\r\n\r\n     addIngredientHandler = (type)=>{\r\n                const oldCount = this.state.items[type];\r\n                const updatedCount = oldCount +1;\r\n                const updatedIngredients = {\r\n                    ...this.state.items\r\n                }\r\n                updatedIngredients[type]=updatedCount;\r\n                const priceAddition = INGREDIENTS_PRICES[type];\r\n                const newPrice = this.state.totalPrice + priceAddition;\r\n                this.setState({ totalPrice:newPrice,items:updatedIngredients})\r\n                this.UpdatePurchaseState(newPrice);\r\n            }\r\n\r\n     removeIngredientHandler =(type)=>{\r\n                if(this.state.items[type]!==0){\r\n        const oldCount = this.state.items[type];\r\n        const updatedCount = oldCount -1;\r\n        const updatedIngredients = {\r\n            ...this.state.items\r\n        }\r\n        updatedIngredients[type]=updatedCount;\r\n        const priceAddition = INGREDIENTS_PRICES[type];\r\n        const newPrice = this.state.totalPrice - priceAddition;\r\n        this.setState({ totalPrice:newPrice,items:updatedIngredients})\r\n        this.UpdatePurchaseState(newPrice);\r\n     }\r\n    }\r\n    render() {\r\n\r\n        const disabledInfo={\r\n            ...this.state.items\r\n        };\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] =disabledInfo[key] <=0;\r\n        }\r\n\r\n        return (\r\n            <Auxiliary>\r\n                {/* <div>Burger</div> */}\r\n                <Burger items={this.state.items}/>\r\n                {/* <div>Build Controls</div> */}\r\n                <BurgerControl \r\n                    ingredientAdded={this.addIngredientHandler}\r\n                    ingredientRemoved ={this.removeIngredientHandler}\r\n                    disabled={disabledInfo}\r\n                    totalprice={this.state.totalPrice}\r\n                    purchase={this.state.purchasable}\r\n\r\n               />\r\n            </Auxiliary>\r\n                \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder\r\n"]},"metadata":{},"sourceType":"module"}